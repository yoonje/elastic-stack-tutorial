#!/bin/sh

ES_URL="https://artifacts.elastic.co/downloads/elasticsearch"
LS_URL="https://artifacts.elastic.co/downloads/logstash"
KB_URL="https://artifacts.elastic.co/downloads/kibana"
FB_URL="https://artifacts.elastic.co/downloads/beats/filebeat"

VER="7.6.1"

ES="elasticsearch-${VER}-linux-x86_64.tar.gz"
LS="logstash-${VER}.tar.gz"
KB="kibana-${VER}-linux-x86_64.tar.gz"
FB="filebeat-${VER}-linux-x86_64.tar.gz"

ES_PKGS=${ES_URL}/${ES}
LS_PKGS=${LS_URL}/${LS}
KB_PKGS=${KB_URL}/${KB}
FB_PKGS=${FB_URL}/${FB}

ES_DIR="elasticsearch"
LS_DIR="logstash"
KB_DIR="kibana"
FB_DIR="filebeat"
HEAD_DIR="elasticsearch-head"
PKGS_DIR="packages"
CONF_DIR="conf"
SYS_DIR="/etc/systemd/system"

ES_CONF="elasticsearch.yml"
KB_CONF="kibana.yml"
FB_CONF="filebeat.yml"

LS_SVC="logstash.service"
KB_SVC="kibana.service"
FB_SVC="filebeat.service"

USER=$(whoami)
PWD=$(pwd)

if [ $USER == "root" ]; then
	echo "root is not permitted"
	exit -1
fi

if [ $PWD != "/home/user/elastic-stack-tutorial" ]; then
	pwd
	echo "/home/user/elastic-stack-tutorial path is permitted only"
	exit -1
fi

function install_elk_packages
{
	
	git pull

	sudo apt -y install wget
	sudo apt -y install default-jdk
	sudo apt -y install default-jre
	sudo apt -y install bzip2 epel-release
	sudo apt -y install npm
	
	mkdir ${PKGS_DIR}
	cd ${PKGS_DIR}

	wget ${ES_PKGS}
	wget ${LS_PKGS}
	wget ${KB_PKGS}
	wget ${FB_PKGS}

	tar xfz ${ES}
	tar xfz ${LS}
	tar xfz ${KB}
	tar xfz ${FB}

	ln -s ./elasticsearch-${VER} elasticsearch
	ln -s ./logstash-${VER} logstash
	ln -s ./kibana-${VER}-linux-x86_64 kibana
	ln -s ./filebeat-${VER}-linux-x86_64 filebeat
	
	sudo git clone https://github.com/mobz/elasticsearch-head.git
	cd ${HEAD_DIR}
	sudo apt -y update openssl
	sudo npm install
	
	sudo sh -c "echo 'user		soft    nofile          65536' >> /etc/security/limits.conf"
	sudo sh -c "echo 'user		hard    nofile          65536' >> /etc/security/limits.conf"
	sudo sh -c "echo 'vm.max_map_count = 262144' >> /etc/sysctl.conf"
	sudo sysctl -p
	sudo su user
}

function es_start
{
	cp ${CONF_DIR}/${ES_CONF} ${PKGS_DIR}/${ES_DIR}/config/elasticsearch.yml
	${PKGS_DIR}/${ES_DIR}/bin/elasticsearch -d
	cd ${PKGS_DIR}/${HEAD_DIR}
	nohup npm run start &
	cd ../..
}

function kb_start
{
	cp ${CONF_DIR}/${KB_CONF} ${PKGS_DIR}/${KB_DIR}/config/${KB_CONF}
	sudo cp ${CONF_DIR}/${KB_SVC} ${SYS_DIR}/${KB_SVC}
	daemon_reload
	sudo systemctl start ${KB_SVC}
}

function fb_start
{
	cp ${CONF_DIR}/${FB_CONF} ${PKGS_DIR}/${FB_DIR}/${FB_CONF}
	sudo cp ${CONF_DIR}/${FB_SVC} ${SYS_DIR}/${FB_SVC}
	daemon_reload
	sudo systemctl start ${FB_SVC}
}

function no_filter
{
        ${PKGS_DIR}/${LS_DIR}/bin/logstash -e 'input { stdin {} } output { stdout {} }'
}

function simple_filter
{
        ${PKGS_DIR}/${LS_DIR}/bin/logstash -f logstash_conf/simple.conf
}

function daemon_reload
{
	sudo systemctl daemon-reload
}


if [ -z $1 ]; then
        echo "##################### Menu ##############"
        echo " $ ./tuto [Command]"
        echo "#####################%%%%%%##############"
        echo "         1 : install elk packages"
        echo "         2 : start es, kibana, filebeat"
        echo "         3 : standard input/output, no filters"
		echo "         4 : standard input/output, simple filter"
        echo "#########################################";
        exit 1;
fi

case "$1" in
        "1" ) install_elk_packages;;
        "2" ) es_start; kb_start; fb_start;;
	    "3" ) no_filter;;
	    "4" ) simple_filter;;
        *) echo "Incorrect Command" ;;
esac
